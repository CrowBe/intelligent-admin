version: '3.8'

services:
  # PostgreSQL Database (for production-like development)
  postgres:
    image: postgres:15-alpine
    container_name: intelligent-assistant-postgres
    environment:
      POSTGRES_DB: intelligent_assistant_dev
      POSTGRES_USER: dev_user
      POSTGRES_PASSWORD: dev_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dev_user -d intelligent_assistant_dev"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache (for production-like development)
  redis:
    image: redis:7-alpine
    container_name: intelligent-assistant-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API (Development)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: intelligent-assistant-backend
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://dev_user:dev_password@postgres:5432/intelligent_assistant_dev
      REDIS_URL: redis://redis:6379
      JWT_SECRET: dev-jwt-secret-change-in-production
      JWT_EXPIRES_IN: 24h
      REFRESH_TOKEN_SECRET: dev-refresh-secret-long-enough-for-validation-requirements
      OPENAI_API_KEY: dummy-key-for-development
      PORT: 3000
    ports:
      - "3000:3000"
    volumes:
      - ./backend:/app
      - /app/node_modules
      - ./backend/uploads:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    develop:
      watch:
        - action: sync
          path: ./backend/src
          target: /app/src
        - action: rebuild
          path: ./backend/package.json

  # Frontend (Development)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: intelligent-assistant-frontend
    environment:
      NODE_ENV: development
      VITE_API_BASE_URL: http://localhost:3000
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    develop:
      watch:
        - action: sync
          path: ./frontend/src
          target: /app/src
        - action: rebuild
          path: ./frontend/package.json

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: intelligent-assistant-network